[tool.poetry]
name = "mcp-example"
version = "0.1.0"
description = "Model Context Protocol (MCP) reference implementation"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "mcp_example"}]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.5.0"
fastapi = "^0.104.0"
uvicorn = "^0.23.2"
jsonschema = "^4.19.0"
websockets = "^11.0.3"
httpx = "^0.25.0"
typer = "^0.9.0"
rich = "^13.5.2"
boto3 = "^1.28.40"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = "^0.26.0"
black = "^23.7.0"
isort = "^5.12.0"
mypy = "^1.5.1"
pytest-cov = "^4.1.0"
ruff = "^0.0.284"
types-jsonschema = "^4.19.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "B", "I"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*" 